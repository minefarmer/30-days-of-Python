>>> print('this' + 'string')
thisstring
>>> print('this' + 'string')
thisstring
>>> print('this' + ' string')
this string
>>> var1 = 'Ronaldo'
>>> print('Hey, ' + var1)
Hey, Ronaldo
>>> print('Go! ' * 3)
Go! Go! Go! 
>>> var2 = 3
>>> print('Number: ' + var2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can only concatenate str (not "int") to str
>>> print('Number: ' + str(var2))
Number: 3
>>> type(str(var2))
<class 'str'>
>>> type(str(3))
<class 'str'>
>>> print('This is a {} string!'.format('formatted
  File "<stdin>", line 1
    print('This is a {} string!'.format('formatted
                                                  ^
SyntaxError: EOL while scanning string literal
>>> print('This is a {} string!'.format('formatted'))
This is a formatted string!
>>> print('This is a {} string!'.format('random'))
This is a random string!
>>> pritn('This is how I enter value {} and {}', format(1, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'pritn' is not defined
>>> print('This is how I enter value {} and {}', format(1, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: format() argument 2 must be str, not int
>>> print('This is how I enter value {} and {}, format(1, 2))
  File "<stdin>", line 1
    print('This is how I enter value {} and {}, format(1, 2))
                                                             ^
SyntaxError: EOL while scanning string literal
>>> print('This is how I enter value {} and value {}, format(1, 2))
  File "<stdin>", line 1
    print('This is how I enter value {} and value {}, format(1, 2))
                                                                   ^
SyntaxError: EOL while scanning string literal
>>> print('This is how I enter value {} and value {}'.format(1,2))
This is how I enter value 1 and value 2
>>> print('The second positional parameter is {1} and the first is{0}'.format(1, 2))
The second positional parameter is 2 and the first is1
>>> print('The second positional parameter is {second} and the first is{'first'}'.format(first, second))
  File "<stdin>", line 1
    print('The second positional parameter is {second} and the first is{'first'}'.format(first, second))
                                                                         ^
SyntaxError: invalid syntax
>>> print('The second positional parameter is {1} and the first is{'0'}'.format(first, second))
  File "<stdin>", line 1
    print('The second positional parameter is {1} and the first is{'0'}'.format(first, second))
                                                                    ^
SyntaxError: invalid syntax
>>> print('The second positional parameter is {1} and the first is{0}'.format(first, second))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'first' is not defined
>>> print('The second positional parameter is {1} and the first is {0}'.format(first, second))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'first' is not defined
>>> print('{0:>5}|{1:^10}'.format('one', 'tw0'))
  one|   tw0    
>>> print('{0:>5}|{1:^10}'.format('one', 'two'))
  one|   two    
>>> print('{0:<5}|{1:>10}'.format('one', 'two'))
one  |       two
>>> print('{0:5}|{1:>10}'.format('one', 'two'))
one  |       two
>>> print(f'This prints myvariable: {var1}')
This prints myvariable: Ronaldo
>>> print(f'This prints var1: {var1}')
This prints var1: Ronaldo
>>> 